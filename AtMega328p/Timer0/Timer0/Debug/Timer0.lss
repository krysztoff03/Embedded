
Timer0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000038  00000000  00000000  00000128  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000d0  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000074  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000e4  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000054  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000164  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000028  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <timer0_ctc_init>:
}

void timer0_ctc_init()
{
	//set TIMER0 with 1:64 prescaler value
	TCCR0B = (1 << WGM02) | (1 << CS01) | (1 << CS00);
  80:	8b e0       	ldi	r24, 0x0B	; 11
  82:	85 bd       	out	0x25, r24	; 37
	//initialize counter
	TCNT0 = 0;
  84:	16 bc       	out	0x26, r1	; 38
	//initialize compare value
	OCR0A = 249;
  86:	89 ef       	ldi	r24, 0xF9	; 249
  88:	87 bd       	out	0x27, r24	; 39
  8a:	08 95       	ret

0000008c <main>:
	/************************************************************************/
	/* TIMER0 Clear Timer on Compare Mode - LED blinks with 1kHz frequency = 1ms */
	/************************************************************************/
	
	//set Pin 7 of PORTD
	DDRD |= (1 << PD7);
  8c:	57 9a       	sbi	0x0a, 7	; 10
	//initialize TIMER0 in Clear Timer on Compare Mode
	timer0_ctc_init();
  8e:	0e 94 40 00 	call	0x80	; 0x80 <timer0_ctc_init>
	while(1)
	{
		//check if the flag bit is set
		if(TIFR0 & (1 << OCF0A))
  92:	a9 9b       	sbis	0x15, 1	; 21
  94:	03 c0       	rjmp	.+6      	; 0x9c <main+0x10>
		{
			//toggle LED on Pin 7
			PORTD ^= (1 << PD7);
  96:	8b b1       	in	r24, 0x0b	; 11
  98:	80 58       	subi	r24, 0x80	; 128
  9a:	8b b9       	out	0x0b, r24	; 11
		}
		//clear the bit manually since there is no interrupt
		TIFR0 |= (1 << OCF0A);
  9c:	a9 9a       	sbi	0x15, 1	; 21
	}
  9e:	f9 cf       	rjmp	.-14     	; 0x92 <main+0x6>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>
